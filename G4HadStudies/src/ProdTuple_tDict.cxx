//
// File generated by /home/inutini/Root/root/bin/rootcint at Fri Feb 20 15:07:13 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIinutinidIirene_thesisdIG4_AnalysisdIG4HadStudiesdIsrcdIProdTuple_tDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ProdTuple_tDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void ProdTuple_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ProdTuple_t(void *p = 0);
   static void *newArray_ProdTuple_t(Long_t size, void *p);
   static void delete_ProdTuple_t(void *p);
   static void deleteArray_ProdTuple_t(void *p);
   static void destruct_ProdTuple_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ProdTuple_t*)
   {
      ::ProdTuple_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ProdTuple_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ProdTuple_t", ::ProdTuple_t::Class_Version(), "/home/inutini/irene_thesis/G4_Analysis/G4HadStudies/include/ProdTuple_t.hh", 13,
                  typeid(::ProdTuple_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ProdTuple_t::Dictionary, isa_proxy, 4,
                  sizeof(::ProdTuple_t) );
      instance.SetNew(&new_ProdTuple_t);
      instance.SetNewArray(&newArray_ProdTuple_t);
      instance.SetDelete(&delete_ProdTuple_t);
      instance.SetDeleteArray(&deleteArray_ProdTuple_t);
      instance.SetDestructor(&destruct_ProdTuple_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ProdTuple_t*)
   {
      return GenerateInitInstanceLocal((::ProdTuple_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TrackInfo_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TrackInfo_t(void *p = 0);
   static void *newArray_TrackInfo_t(Long_t size, void *p);
   static void delete_TrackInfo_t(void *p);
   static void deleteArray_TrackInfo_t(void *p);
   static void destruct_TrackInfo_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TrackInfo_t*)
   {
      ::TrackInfo_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TrackInfo_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TrackInfo_t", ::TrackInfo_t::Class_Version(), "/home/inutini/irene_thesis/G4_Analysis/G4HadStudies/include/TrackInfo_t.hh", 12,
                  typeid(::TrackInfo_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TrackInfo_t::Dictionary, isa_proxy, 4,
                  sizeof(::TrackInfo_t) );
      instance.SetNew(&new_TrackInfo_t);
      instance.SetNewArray(&newArray_TrackInfo_t);
      instance.SetDelete(&delete_TrackInfo_t);
      instance.SetDeleteArray(&deleteArray_TrackInfo_t);
      instance.SetDestructor(&destruct_TrackInfo_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TrackInfo_t*)
   {
      return GenerateInitInstanceLocal((::TrackInfo_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr ProdTuple_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ProdTuple_t::Class_Name()
{
   return "ProdTuple_t";
}

//______________________________________________________________________________
const char *ProdTuple_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ProdTuple_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ProdTuple_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ProdTuple_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TrackInfo_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TrackInfo_t::Class_Name()
{
   return "TrackInfo_t";
}

//______________________________________________________________________________
const char *TrackInfo_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrackInfo_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrackInfo_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrackInfo_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void ProdTuple_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class ProdTuple_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ProdTuple_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(ProdTuple_t::Class(),this);
   }
}

//______________________________________________________________________________
void ProdTuple_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ProdTuple_t.
      TClass *R__cl = ::ProdTuple_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NPart", &NPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PDG[200]", PDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kinEn[200]", kinEn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X[200][3]", X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P[200][4]", P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InterType[200]", InterType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "enerPrimGen", &enerPrimGen);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ProdTuple_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ProdTuple_t : new ::ProdTuple_t;
   }
   static void *newArray_ProdTuple_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ProdTuple_t[nElements] : new ::ProdTuple_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_ProdTuple_t(void *p) {
      delete ((::ProdTuple_t*)p);
   }
   static void deleteArray_ProdTuple_t(void *p) {
      delete [] ((::ProdTuple_t*)p);
   }
   static void destruct_ProdTuple_t(void *p) {
      typedef ::ProdTuple_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ProdTuple_t

//______________________________________________________________________________
void TrackInfo_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class TrackInfo_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TrackInfo_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(TrackInfo_t::Class(),this);
   }
}

//______________________________________________________________________________
void TrackInfo_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TrackInfo_t.
      TClass *R__cl = ::TrackInfo_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pos", &Pos);
      R__insp.InspectMember(Pos, "Pos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mom", &Mom);
      R__insp.InspectMember(Mom, "Mom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PDGcode", &PDGcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "massPart", &massPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kinEn", &kinEn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "interType", &interType);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TrackInfo_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TrackInfo_t : new ::TrackInfo_t;
   }
   static void *newArray_TrackInfo_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TrackInfo_t[nElements] : new ::TrackInfo_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_TrackInfo_t(void *p) {
      delete ((::TrackInfo_t*)p);
   }
   static void deleteArray_TrackInfo_t(void *p) {
      delete [] ((::TrackInfo_t*)p);
   }
   static void destruct_TrackInfo_t(void *p) {
      typedef ::TrackInfo_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TrackInfo_t

/********************************************************
* /home/inutini/irene_thesis/G4_Analysis/G4HadStudies/src/ProdTuple_tDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableProdTuple_tDict();

extern "C" void G__set_cpp_environmentProdTuple_tDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/inutini/irene_thesis/G4_Analysis/G4HadStudies/include/ProdTuple_t.hh");
  G__add_compiledheader("/home/inutini/irene_thesis/G4_Analysis/G4HadStudies/include/TrackInfo_t.hh");
  G__cpp_reset_tagtableProdTuple_tDict();
}
#include <new>
extern "C" int G__cpp_dllrevProdTuple_tDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ProdTuple_t */
static int G__ProdTuple_tDict_215_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ProdTuple_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ProdTuple_t[n];
     } else {
       p = new((void*) gvp) ProdTuple_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ProdTuple_t;
     } else {
       p = new((void*) gvp) ProdTuple_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProdTuple_tDictLN_ProdTuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_215_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ProdTuple_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_215_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ProdTuple_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_215_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ProdTuple_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_215_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ProdTuple_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_215_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ProdTuple_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_215_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ProdTuple_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_215_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ProdTuple_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_215_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ProdTuple_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_215_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ProdTuple_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_215_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ProdTuple_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_215_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ProdTuple_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_215_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ProdTuple_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProdTuple_tDict_215_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ProdTuple_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ProdTuple_t(*(ProdTuple_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProdTuple_tDictLN_ProdTuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ProdTuple_t G__TProdTuple_t;
static int G__ProdTuple_tDict_215_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ProdTuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ProdTuple_t*) (soff+(sizeof(ProdTuple_t)*i)))->~G__TProdTuple_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ProdTuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ProdTuple_t*) (soff))->~G__TProdTuple_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProdTuple_tDict_215_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ProdTuple_t* dest = (ProdTuple_t*) G__getstructoffset();
   *dest = *(ProdTuple_t*) libp->para[0].ref;
   const ProdTuple_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TrackInfo_t */
static int G__ProdTuple_tDict_258_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackInfo_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackInfo_t[n];
     } else {
       p = new((void*) gvp) TrackInfo_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackInfo_t;
     } else {
       p = new((void*) gvp) TrackInfo_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TrackInfo_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_258_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TrackInfo_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_258_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_258_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TrackInfo_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_258_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TrackInfo_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_258_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TrackInfo_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_258_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackInfo_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_258_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackInfo_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_258_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackInfo_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_258_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_258_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrackInfo_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_258_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProdTuple_tDict_258_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrackInfo_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProdTuple_tDict_258_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TrackInfo_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TrackInfo_t(*(TrackInfo_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TrackInfo_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TrackInfo_t G__TTrackInfo_t;
static int G__ProdTuple_tDict_258_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TrackInfo_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TrackInfo_t*) (soff+(sizeof(TrackInfo_t)*i)))->~G__TTrackInfo_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TrackInfo_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TrackInfo_t*) (soff))->~G__TTrackInfo_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProdTuple_tDict_258_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackInfo_t* dest = (TrackInfo_t*) G__getstructoffset();
   *dest = *(TrackInfo_t*) libp->para[0].ref;
   const TrackInfo_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ProdTuple_t */

/* TrackInfo_t */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncProdTuple_tDict {
 public:
  G__Sizep2memfuncProdTuple_tDict(): p(&G__Sizep2memfuncProdTuple_tDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncProdTuple_tDict::*p)();
};

size_t G__get_sizep2memfuncProdTuple_tDict()
{
  G__Sizep2memfuncProdTuple_tDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceProdTuple_tDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableProdTuple_tDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProdTuple_tDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProdTuple_tDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProdTuple_tDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProdTuple_tDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ProdTuple_t */
static void G__setup_memvarProdTuple_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProdTuple_tDictLN_ProdTuple_t));
   { ProdTuple_t *p; p=(ProdTuple_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NPart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NPart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PDG)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PDG[200]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->kinEn)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"kinEn[200]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->X)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"X[200][3]=",0,"Initial position of the track");
   G__memvar_setup((void*)((long)(&p->P)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"P[200][4]=",0,"4-momentum. P[maxPart][3] is the energy");
   G__memvar_setup((void*)((long)(&p->InterType)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"InterType[200]=",0,"1: Hadronic Inelastic,   2: Hadronic Elastic");
   G__memvar_setup((void*)((long)(&p->enerPrimGen)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"enerPrimGen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TrackInfo_t */
static void G__setup_memvarTrackInfo_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProdTuple_tDictLN_TrackInfo_t));
   { TrackInfo_t *p; p=(TrackInfo_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TVector3),-1,-1,1,"Pos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TLorentzVector),-1,-1,1,"Mom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PDGcode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PDGcode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->massPart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"massPart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->kinEn)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"kinEn=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->interType)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"interType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProdTuple_tDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarProdTuple_tDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncProdTuple_t(void) {
   /* ProdTuple_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProdTuple_tDictLN_ProdTuple_t));
   G__memfunc_setup("ProdTuple_t",1138,G__ProdTuple_tDict_215_0_1, 105, G__get_linked_tagnum(&G__ProdTuple_tDictLN_ProdTuple_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ProdTuple_tDict_215_0_2, 85, G__get_linked_tagnum(&G__ProdTuple_tDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ProdTuple_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ProdTuple_tDict_215_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ProdTuple_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ProdTuple_tDict_215_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ProdTuple_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ProdTuple_tDict_215_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ProdTuple_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ProdTuple_tDict_215_0_6, 85, G__get_linked_tagnum(&G__ProdTuple_tDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ProdTuple_tDict_215_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ProdTuple_tDict_215_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ProdTuple_tDict_215_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ProdTuple_tDict_215_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ProdTuple_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ProdTuple_tDict_215_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ProdTuple_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ProdTuple_tDict_215_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ProdTuple_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ProdTuple_tDict_215_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ProdTuple_t::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ProdTuple_t", 1138, G__ProdTuple_tDict_215_0_14, (int) ('i'), G__get_linked_tagnum(&G__ProdTuple_tDictLN_ProdTuple_t), -1, 0, 1, 1, 1, 0, "u 'ProdTuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ProdTuple_t", 1264, G__ProdTuple_tDict_215_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProdTuple_tDict_215_0_16, (int) ('u'), G__get_linked_tagnum(&G__ProdTuple_tDictLN_ProdTuple_t), -1, 1, 1, 1, 1, 0, "u 'ProdTuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTrackInfo_t(void) {
   /* TrackInfo_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProdTuple_tDictLN_TrackInfo_t));
   G__memfunc_setup("TrackInfo_t",1108,G__ProdTuple_tDict_258_0_1, 105, G__get_linked_tagnum(&G__ProdTuple_tDictLN_TrackInfo_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ProdTuple_tDict_258_0_2, 85, G__get_linked_tagnum(&G__ProdTuple_tDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TrackInfo_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ProdTuple_tDict_258_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackInfo_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ProdTuple_tDict_258_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TrackInfo_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ProdTuple_tDict_258_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TrackInfo_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ProdTuple_tDict_258_0_6, 85, G__get_linked_tagnum(&G__ProdTuple_tDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ProdTuple_tDict_258_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ProdTuple_tDict_258_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ProdTuple_tDict_258_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ProdTuple_tDict_258_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackInfo_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ProdTuple_tDict_258_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrackInfo_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ProdTuple_tDict_258_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackInfo_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ProdTuple_tDict_258_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrackInfo_t::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TrackInfo_t", 1108, G__ProdTuple_tDict_258_0_14, (int) ('i'), G__get_linked_tagnum(&G__ProdTuple_tDictLN_TrackInfo_t), -1, 0, 1, 1, 1, 0, "u 'TrackInfo_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackInfo_t", 1234, G__ProdTuple_tDict_258_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProdTuple_tDict_258_0_16, (int) ('u'), G__get_linked_tagnum(&G__ProdTuple_tDictLN_TrackInfo_t), -1, 1, 1, 1, 1, 0, "u 'TrackInfo_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncProdTuple_tDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalProdTuple_tDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcProdTuple_tDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ProdTuple_tDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_ProdTuple_t = { "ProdTuple_t" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__ProdTuple_tDictLN_TrackInfo_t = { "TrackInfo_t" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableProdTuple_tDict() {
  G__ProdTuple_tDictLN_TClass.tagnum = -1 ;
  G__ProdTuple_tDictLN_TBuffer.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMemberInspector.tagnum = -1 ;
  G__ProdTuple_tDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_ProdTuple_t.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__ProdTuple_tDictLN_TVector3.tagnum = -1 ;
  G__ProdTuple_tDictLN_TLorentzVector.tagnum = -1 ;
  G__ProdTuple_tDictLN_TrackInfo_t.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableProdTuple_tDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_ProdTuple_t),sizeof(ProdTuple_t),-1,263424,(char*)NULL,G__setup_memvarProdTuple_t,G__setup_memfuncProdTuple_t);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProdTuple_tDictLN_TrackInfo_t),sizeof(TrackInfo_t),-1,263424,(char*)NULL,G__setup_memvarTrackInfo_t,G__setup_memfuncTrackInfo_t);
}
extern "C" void G__cpp_setupProdTuple_tDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupProdTuple_tDict()");
  G__set_cpp_environmentProdTuple_tDict();
  G__cpp_setup_tagtableProdTuple_tDict();

  G__cpp_setup_inheritanceProdTuple_tDict();

  G__cpp_setup_typetableProdTuple_tDict();

  G__cpp_setup_memvarProdTuple_tDict();

  G__cpp_setup_memfuncProdTuple_tDict();
  G__cpp_setup_globalProdTuple_tDict();
  G__cpp_setup_funcProdTuple_tDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncProdTuple_tDict();
  return;
}
class G__cpp_setup_initProdTuple_tDict {
  public:
    G__cpp_setup_initProdTuple_tDict() { G__add_setup_func("ProdTuple_tDict",(G__incsetup)(&G__cpp_setupProdTuple_tDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initProdTuple_tDict() { G__remove_setup_func("ProdTuple_tDict"); }
};
G__cpp_setup_initProdTuple_tDict G__cpp_setup_initializerProdTuple_tDict;

